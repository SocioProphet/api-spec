openapi: 3.0.0
info:
  title: The Giant Swarm API
  description: >
    This is the documentation for the Giant Swarm API.


    For an introduction to Giant Swarm, refer to the [documentation site](https://docs.giantswarm.io/).


    The Giant Swarm API attempts to behave in a __restful__ way. As a developer, you access resources using the `GET` method and, for example, delete them using the same path and the `DELETE` method.


    Accessing resources via GET usually returns all information available about a resource, while collections, like for example the list of all clusters you have access to, only contain a selected few attributes of each member item.


    Some requests, like for example the request to create a new cluster, don't return the resource itself. Instead, the response delivers a standard message body, showing a `code` and a `message` part. The `message` contains information for you or a client's end user. The `code` attribute contains some string (example: `RESOURCE_CREATED`) that is supposed to give you details on the state of the operation, in addition to standard HTTP status codes. This message format is also used in the case of errors. We provide a [list of all response codes](https://github.com/giantswarm/api-spec/blob/master/details/RESPONSE_CODES.md) outside this documentation.


    Feedback on the API as well as this documentation is welcome via `support@giantswarm.io` or on IRC channel [#giantswarm](irc://irc.freenode.org:6667/#giantswarm) on freenode.


    ## Source


    The source of this documentation is available on [GitHub](https://github.com/giantswarm/api-spec).
  termsOfService: https://giantswarm.io/terms/
  version: 4.0.0
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
tags:
  - name: auth tokens
    description: >
      Auth Tokens are your way of authenticating against this API. You can
      create one by passing your email and base64 encoded password to the create
      auth token endpoint. The auth token never expires, in case you want to
      invalidate it you need to delete it (logout).
  - name: clusters
    description: |
      Clusters are a central resource of the Giant Swarm API. As a team using
      Giant Swarm, you set up Kubernetes clusters to run your own workloads.

      Some cluster-related API operations are provider specific. Please pay
      special attention to provider tags AWS
      Azure KVM
      to find additional information regarding provider compatibility.
  - name: info
    description: Information about the Giant Swarm installation
  - name: key pairs
    description: A key pair is a unique combination of a X.509 certificate and a private
      key. Key pairs are used to access the Kubernetes API of a cluster, both
      using `kubectl` and any standard web browser.
    externalDocs:
      url: https://docs.giantswarm.io/guides/accessing-services-from-the-outside/
      description: "User guide: Accessing Pods and Services from the Outside"
  - name: nodepools
    x-internal: true
    description: |
      This concept is introduced with v5 of this API and is currently only
      available on AWS.

      Worker nodes in tenant clusters are grouped in node pools. All nodes in a
      node pool share the same configuration and scaling is controlled on a pool
      level. This allows to fulfill a variety of different workload requirements
      within the same cluster.
  - name: apps
    description: "An app is a helm chart that you can easily install on your tenant
      clusters. Use these endpoints to: find out what catalogs your installation
      supports, and list and install apps on on your tenant clusters."
  - name: app configs
    description: Creating an app config lets you supply your apps with custom configuration
      values.
  - name: organizations
    description: Organizations are groups of users who own resources like clusters.
  - name: users
    description: A user represents a person that should have access to the Giant Swarm API.
      Users can belong to many groups, and are identified by email address.
  - name: releases
    description: |
      A release is a software bundle that constitutes a cluster.

      Releases are identified by their
      [semantic version number](http://semver.org/) in the `MAJOR.MINOR.PATCH`
      format.

      A release provides _components_, like for example Kubernetes. For each
      release the contained components are listed. Changes in components are
      detailed in the _changelog_ of a release.
security:
  - AuthorizationHeaderToken: []
paths:
  /v4/appcatalogs/:
    get:
      operationId: getAppCatalogs
      tags:
        - apps
      summary: Get a list of app catalogs configured on your installation.
      description: >
        Returns an array of app catalog objects, which contains further
        metadata,

        including a URL to fetch the full index of each catalog.


        #### About the Labels


        - `application.giantswarm.io/catalog-type`
          Describes the type of catalog.

          - `managed` - Apps in this catalog are managed by Giant Swarm.
          - `incubator` - Apps in this catalog are a work in progress. They're
                          made with your Giant Swarm cluster in mind though, so
                          they should work. Feedback is appreciated on these apps.
          - `test` - Apps in this catalog will soon graduate to incubator status,
                     you most likely will not see any `test` catalogs on your
                     installations.
          - `community` - Apps in this catalog are provided by the kubernetes
                          community. They will most likely not work without making
                          some changes to the security settings of your cluster.

          App Catalogs can also be labeled as `internal`, however these catalogs
          contain apps that run on our control planes. These `internal` app catalogs
          will be filtered out and never shown when calling this endpoint.

          For more details on app catalogs visit: https://docs.giantswarm.io/basics/app-catalog/


        ### Example

        ```json
          [
            {
              "metadata": {
                "name": "sample-catalog",
                "labels": {
                  "application.giantswarm.io/catalog-type": "test",
                  "app-operator.giantswarm.io/version": "1.0.0",
                },
              },

              "spec": {
                "description": "Giant Swarm's Sample Catalog with a few apps to test things out.",
                "logoURL": "https://s.giantswarm.io/app-catalog/1/images/sample-catalog.png",

                "storage": {
                  "URL": "https://giantswarm.github.com/sample-catalog/",
                  "type": "helm"
                },
                "title": "Sample Catalog"
              }
            }
          ]
        ```
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
      responses:
        "200":
          description: Information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4AppCatalogsResponse"
              examples:
                response:
                  value:
                    - metadata:
                        name: sample-catalog
                        labels:
                          application.giantswarm.io/catalog-type: test
                          app-operator.giantswarm.io/version: 1.0.0
                      spec:
                        description: Giant Swarm's Sample Catalog with a few apps to test
                          things out.
                        logoURL: https://s.giantswarm.io/app-catalog/1/images/sample-catalog.png
                        storage:
                          URL: https://giantswarm.github.com/sample-catalog/
                          type: helm
                        title: Sample Catalog
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
  /v4/info/:
    get:
      operationId: getInfo
      tags:
        - info
      summary: Get information on the installation
      description: |
        Returns a set of details on the installation. The output varies based
        on the provider used in the installation.

        This information is useful for example when creating new cluster, to
        prevent creating clusters with more worker nodes than possible.

        ### Example for an AWS-based installation

        ```json
        {
          "general": {
            "installation_name": "shire",
            "provider": "aws",
            "datacenter": "eu-central-1",
            "availability_zones": {
              "max": 3,
              "default": 1,
            }
          },
          "stats": {
            "cluster_creation_duration": {
              "median": 750,
              "p25": 700,
              "p75": 800
            }
          },
          "workers": {
            "count_per_cluster": {
              "max": null,
              "default": 3
            },
            "instance_type": {
              "options": [
                "m3.medium", "m3.large", "m3.xlarge"
              ],
              "default": "m3.large"
            }
          }
        }
        ```

        ### Example for a KVM-based installation

        ```json
        {
          "general": {
            "installation_name": "isengard",
            "provider": "kvm",
            "datacenter": "string",
            "availability_zones": {
              "max": 1,
              "default": 1,
            }
          },
          "stats": {
            "cluster_creation_duration": {
              "median": 750,
              "p25": 700,
              "p75": 800
            }
          },
          "workers": {
            "count_per_cluster": {
              "max": 8,
              "default": 3
            },
          }
        }
        ```
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
      responses:
        "200":
          description: Information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4InfoResponse"
              examples:
                response:
                  value:
                    general:
                      installation_name: shire
                      provider: aws
                      datacenter: eu-central-1
                      availability_zones:
                        max: 3
                        default: 1
                    stats:
                      cluster_creation_duration:
                        median: 750
                        p25: 700
                        p75: 800
                    workers:
                      count_per_cluster:
                        max: null
                        default: 3
                      instance_type:
                        options:
                          - m3.medium
                          - m3.large
                          - m3.xlarge
                        default: m3.large
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
  /v4/auth-tokens/:
    post:
      operationId: createAuthToken
      tags:
        - auth tokens
      summary: Create Auth Token (Login)
      description: >
        Creates a Auth Token for a given user. Must authenticate with email and
        password.
      parameters:
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V4CreateAuthTokenRequest"
        description: Create Auth Token Request
        required: true
        x-examples:
          application/json:
            email: developer@example.com
            password_base64: cGFzc3dvcmQ=
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4CreateAuthTokenResponse"
              examples:
                response:
                  value:
                    auth_token: e5239484-2299-41df-b901-d0568db7e3f9
        "401":
          $ref: "#/components/responses/V4Generic401Response"
    delete:
      operationId: deleteAuthToken
      tags:
        - auth tokens
      summary: Delete Auth Token (Logout)
      description: >
        Deletes the authentication token provided in the Authorization header.
        This effectively logs you out.
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: RESOURCE_DELETED
                    message: The authentication token has been succesfully deleted.
        "401":
          $ref: "#/components/responses/V4Generic401Response"
  /v4/users/:
    get:
      operationId: getUsers
      tags:
        - users
      summary: Get users
      description: >
        Returns a list of all users in the system. Currently this endpoint is
        only available to users with admin permissions.
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/V4UserListItem"
              examples:
                response:
                  value:
                    - email: andy@example.com
                      created: 2017-01-15T12:00:00Z
                      expiry: 2019-01-15T00:00:00Z
                    - email: bob@example.com
                      created: 2017-02-15T12:30:00Z
                      expiry: 2020-01-15T00:00:00Z
                    - email: charles@example.com
                      created: 2017-03-15T13:00:00Z
                      expiry: 2021-01-15T00:00:00Z
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
  /v4/user/:
    get:
      operationId: getCurrentUser
      tags:
        - users
      summary: Get current user
      description: |
        Returns details about the currently authenticated user
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4UserListItem"
              examples:
                response:
                  value:
                    email: andy@example.com
                    created: 2017-01-15T12:00:00Z
                    expiry: 2019-01-15T00:00:00Z
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
  "/v4/users/{email}/":
    get:
      operationId: getUser
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
        - $ref: "#/components/parameters/UserEmailPathParameter"
      tags:
        - users
      summary: Get user
      description: |
        Returns details about a specific user
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4UserListItem"
              examples:
                response:
                  value:
                    email: andy@example.com
                    created: 2017-01-15T12:00:00Z
                    expiry: 2019-01-15T00:00:00Z
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: "The user could not be found. (not found: user with email
                      'bob@example.com' could not be found)"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
    put:
      operationId: createUser
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
        - $ref: "#/components/parameters/UserEmailPathParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V4CreateUserRequest"
        description: User account details
        required: true
        x-examples:
          application/json:
            password: cGFzc3dvcmQ=
            expiry: 2020-01-01T12:00:00.000Z
      tags:
        - users
      summary: Create user
      description: >
        Creates a users in the system. Currently this endpoint is only available
        to users with admin permissions.
      responses:
        "201":
          description: User created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: RESOURCE_CREATED
                    message: The user with email 'bob@example.com' has been created.
        "400":
          description: User already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: RESOURCE_ALREADY_EXISTS
                    message: "The user could not be created. (invalid input: email
                      'bob@example.com' already exists)"
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
    patch:
      operationId: modifyUser
      tags:
        - users
      summary: Modify user
      description: >
        This operation allows you to change details of a given user. Only
        administrators can edit accounts of other users.
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
        - $ref: "#/components/parameters/UserEmailPathParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V4ModifyUserRequest"
        description: User account details
        required: true
        x-examples:
          application/json:
            email: edited-email@example.com
            expiry: 2037-01-15T00:00:00Z
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4UserListItem"
              examples:
                response:
                  value:
                    email: edited-email@example.com
                    created: 2017-01-15T12:00:00Z
                    expiry: 2037-01-15T00:00:00Z
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
    delete:
      operationId: deleteUser
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
        - $ref: "#/components/parameters/UserEmailPathParameter"
      tags:
        - users
      summary: Delete user
      description: |
        Deletes a users in the system. Currently this endpoint is only available
        to users with admin permissions.
      responses:
        "200":
          description: User deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: RESOURCE_DELETED
                    message: The user with email 'bob@example.com' has been deleted.
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: "The user could not be deleted. (not found: user with
                      email 'bob@example.com' could not be found)"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
  "/v4/users/{email}/password/":
    post:
      operationId: modifyPassword
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
        - $ref: "#/components/parameters/UserEmailPathParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V4ModifyUserPasswordRequest"
        description: Modify password request
        required: true
        x-examples:
          application/json:
            current_password_base64: cGFzc3dvcmQ=
            new_password_base64: bXluZXdwYXNzd29yZA==
      tags:
        - users
      summary: Modify password
      description: >
        This operation allows you to change your password. Admins are able to
        change passwords of other users.
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: RESOURCE_UPDATED
                    message: The password has been updated.
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: "The user could not be found. (not found: user with email
                      'bob@example.com' could not be found)"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
  /v4/clusters/:
    get:
      operationId: getClusters
      tags:
        - clusters
      summary: Get clusters
      description: |
        This operation fetches a list of clusters.

        The result depends on the permissions of the user.
        A normal user will get all the clusters the user has access
        to, via organization membership.
        A user with admin permission will receive a list of all existing
        clusters.

        The result array items are sparse representations of the cluster
        objects. To fetch more details on a cluster, use the
        [getClusterStatus](#operation/getClusterStatus) operation.
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/V4ClusterListItem"
              examples:
                response:
                  value:
                    - id: g8s3o
                      create_date: 2019-03-08T12:31:47.215Z
                      name: Staging Cluster
                      owner: acme
                      release_version: 7.0.1
                      path: /v4/clusters/g8s3o/
                    - id: 3dkr6
                      create_date: 2019-07-22T13:58:02.024Z
                      name: Node Pools Cluster
                      owner: testorg
                      release_version: 9.0.0
                      path: /v5/clusters/3dkr6/
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
    post:
      operationId: addCluster
      tags:
        - clusters
      summary: Create cluster (v4)
      description: >
        This operation is used to create a new Kubernetes cluster or

        "tenant cluster".


        ### Cluster definition


        The cluster definition format allows to set a number of optional

        configuration details, like worker node configuration, with node

        specification depending on the provider (e. g. on Azure the

        VM size, or on KVM the memory size and number of CPU cores).


        One attribute is __mandatory__ upon creation: The `owner`

        attribute must carry the name of the organization the cluster will

        belong to. Note that the acting user must be a member of that

        organization in order to create a cluster.


        For all other attributes, defaults will be applied if the attribute

        is not set. Check out the [getInfo](#operation/getInfo) operation for

        more info about defaults. If no `release_version` is set, the latest

        release version available for the provider will be used.
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V4AddClusterRequest"
        description: New cluster definition
        required: true
        x-examples:
          application/json:
            owner: myteam
            release_version: 7.1.0
            name: Example cluster with 3 m5.xlarge nodes
            availability_zones: 2
            scaling:
              min: 3
              max: 3
            workers:
              - aws:
                  instance_type: m5.xlarge
      responses:
        "201":
          description: Cluster created
          headers:
            Location:
              description: URI to obtain details on the new cluster using the
                [getCluster](#operation/getCluster) operation
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: RESOURCE_CREATED
                    message: A new cluster has been created with ID 'wqtlq'
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
  "/v4/clusters/{cluster_id}/":
    get:
      operationId: getCluster
      tags:
        - clusters
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
        - $ref: "#/components/parameters/ClusterIdPathParameter"
      summary: Get cluster details (v4)
      description: |
        This operation allows to obtain basic details on a particular cluster.
      responses:
        "200":
          description: Cluster details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4ClusterDetailsResponse"
              examples:
                response:
                  value:
                    id: wqtlq
                    create_date: 2017-03-03T10:50:45.949270905Z
                    api_endpoint: https://api.wqtlq.example.com
                    name: Just a Standard Cluster
                    release_version: 2.5.16
                    owner: acme
                    credential_id: a1b2c
                    availability_zones:
                      - fire-zone-1
                    workers:
                      - memory:
                          size_gb: 2
                        storage:
                          size_gb: 20
                        cpu:
                          cores: 4
                        labels:
                          beta.kubernetes.io/arch: amd64
                          beta.kubernetes.io/os: linux
                          ip: 10.3.11.2
                          kubernetes.io/hostname: worker-1.x882ofna.k8s.gigantic.io
                          nodetype: hicpu
                      - memory:
                          size_gb: 8
                        storage:
                          size_gb: 20
                        cpu:
                          cores: 2
                        labels:
                          beta.kubernetes.io/arch: amd64
                          beta.kubernetes.io/os: linux
                          ip: 10.3.62.2
                          kubernetes.io/hostname: worker-2.x882ofna.k8s.gigantic.io
                          nodetype: hiram
                    kvm:
                      port_mappings:
                        - port: 30020
                          protocol: http
                        - port: 30021
                          protocol: https
        "301":
          description: Version mismatch
          headers:
            Location:
              description: |
                URI of the new path to use for retrying the request, as the one
                used is not usable for this cluster.
              schema:
                type: string
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        "404":
          description: Cluster not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: The cluster with ID 'wqtlq' could not be found, or perhaps
                      you do not have access to it. Please make sure the cluster
                      ID is correct, and that you are a member of the
                      organization that it belongs to.
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
    patch:
      operationId: modifyCluster
      tags:
        - clusters
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
        - $ref: "#/components/parameters/ClusterIdPathParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V4ModifyClusterRequest"
        description: Merge-patch body
        required: true
        x-examples:
          application/merge-patch+json:
            name: New cluster name
      summary: Modify cluster (v4)
      description: >
        This operation allows to modify an existing cluster.


        A cluster modification is performed by submitting a `PATCH` request

        to the cluster resource (as described in the

        [addCluster](#operation/addCluster) and [getCluster](#operation/getCluster))

        in form of a [JSON Patch Merge

        (RFC 7386)](https://tools.ietf.org/html/rfc7386). This means, only the

        attributes to be modified have to be contained in the request body.


        The following attributes can be modified:


        - `name`: Rename the cluster to something more fitting.


        - `owner`: Changing the owner organization name means to change cluster

        ownership from one organization to another. The user performing the

        request has to be a member of both organizations.


        - `release_version`: By changing this attribute you can upgrade a

        cluster to a newer

        [release](https://docs.giantswarm.io/api/#tag/releases).


        - `scaling`: Adjust the cluster node limits to make use of auto scaling

        or to have full control over the node count. The latter can be

        achieved by setting `min` and `max` to the same values. Note that

        setting `min` and `max` to different values (effectively enabling

        autoscaling) is only available on AWS with releases from 6.2.0.

         - `workers` (deprecated): For backward compatibility reasons, it is
        possible to provide this attribute as an array, where the number of

        items contained in the array determines the intended number of worker

        nodes in the cluster. The item count will be applied as both `min` and

        `max` value of the scaling limits, effectively disabling autoscaling.

        This requires the `scaling` attribute must not be present in the same

        request.


        ### Limitations


        - As of now, existing worker nodes cannot be modified.

        - The number of availability zones cannot be modified.

        - When removing nodes (scaling down), it is not possible to determine

        which nodes will be removed.
      responses:
        "200":
          description: Cluster modified
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4ClusterDetailsResponse"
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        "404":
          description: Cluster not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: The cluster with ID 'wqtlq' could not be found, or perhaps
                      you do not have access to it. Please make sure the cluster
                      ID is correct, and that you are a member of the
                      organization that it belongs to.
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
    delete:
      operationId: deleteCluster
      tags:
        - clusters
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
        - $ref: "#/components/parameters/ClusterIdPathParameter"
      summary: Delete cluster
      description: >
        This operation triggers deleting a cluster with all resources attached
        to it.


        Deleting a cluster causes the termination of all workloads running on

        the cluster. Data stored on the worker nodes will be lost. There is no

        way to undo this operation.


        The response is sent as soon as the request is validated.

        At that point, workloads might still be running on the cluster and may be accessible for a little wile, until the cluster is actually deleted.
      responses:
        "202":
          description: Deleting cluster
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: RESOURCE_DELETION_STARTED
                    message: The cluster with ID 'wqtlq' is being deleted.
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        "404":
          description: Cluster not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: The cluster with ID 'wqtlq' could not be found, or perhaps
                      you do not have access to it. Please make sure the cluster
                      ID is correct, and that you are a member of the
                      organization that it belongs to.
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
  "/v4/clusters/{cluster_id}/key-pairs/":
    get:
      operationId: getKeyPairs
      tags:
        - key pairs
      summary: Get key pairs
      description: >
        Returns a list of information on all key pairs of a cluster as an array.


        The individual array items contain metadata on the key pairs, but neither the key nor the certificate. These can only be obtained upon creation, using the [addKeypair](#operation/addKeyPair) operation.
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
        - $ref: "#/components/parameters/ClusterIdPathParameter"
      responses:
        "200":
          description: Key pairs
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GetKeyPairsResponse"
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
    post:
      operationId: addKeyPair
      tags:
        - key pairs
      summary: Create key pair
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
        - $ref: "#/components/parameters/ClusterIdPathParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V4AddKeyPairRequest"
        description: >
          While the `ttl_hours` attribute is optional and will be set to a
          default value when omitted, the `description` is mandatory.
        required: true
        x-examples:
          application/json:
            description: Admin key pair lasting twelve hours
            ttl_hours: 12
            certificate_organizations: system:masters
      description: >
        This operation allows to create a new key pair for accessing a specific
        cluster.


        A key pair consists of an unencrypted private RSA key and an X.509 certificate. In addition, when obtaining a key pair for a cluster, the cluster's certificate authority file (CA certificate) is delivered, which is required by TLS clients to establish trust to the cluster.


        In addition to the credentials itself, a key pair has some metadata like a unique ID, a creation timestamp and a free text `description` that you can use at will, for example to note for whom a key pair has been issued.


        ### Customizing the certificate's subject for K8s RBAC


        It is possible to set the Common Name and Organization fields of the generated certificate's subject.


        - `cn_prefix`: The certificate's common name uses this format: `.user.`.

          `clusterdomain` is specific to your cluster and is not editable.

          The `cn_prefix` however is editable. When left blank it will default
          to the email address of the Giant Swarm user that is performing the
          create key pair request.

          The common name is used as the username for requests to the Kubernetes API. This allows you
          to set up role-based access controls.


        - `certificate_organizations`: This will set the certificate's `organization` fields. Use a comma separated list of values.
          The Kubernetes API will use these values as group memberships.

        __Note:__ The actual credentials coming with the key pair (key, certificate) can only be accessed once, as the result of the `POST` request that triggers their creation. This restriction exists to minimize the risk of credentials being leaked. If you fail to capture the credentials upon creation, you'll have to repeat the creation request.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4AddKeyPairResponse"
              examples:
                response:
                  value:
                    certificate_authority_data: -----BEGIN CERTIFICATE-----...-----END CERTIFICATE-----
                    client_key_data: -----BEGIN RSA PRIVATE KEY-----...-----END RSA PRIVATE
                      KEY-----
                    client_certificate_data: -----BEGIN CERTIFICATE-----...-----END CERTIFICATE-----
                    create_date: 2016-06-01T12:00:00.000Z
                    description: Key pair description
                    id: 02:cc:da:f9:fb:ce:c3:e5:e1:f6:27:d8:43:48:0d:37:4a:ee:b9:67
                    ttl_hours: 8640
        "401":
          $ref: "#/components/responses/V4Generic401Response"
  "/v4/clusters/{cluster_id}/status/":
    get:
      operationId: getClusterStatus
      tags:
        - clusters
      summary: Get cluster status
      description: >
        Returns an object about a cluster's current state and past status
        transitions.


        This endpoint exposes the status content of the Kubernetes resources representing

        a cluster in the corresponding custom resource. That is, depending on the provider:


        - [`awsconfig.provider.giantswarm.io`](https://godoc.org/github.com/giantswarm/apiextensions/pkg/apis/provider/v1alpha1#AWSConfig)

        - [`azureconfig.provider.giantswarm.io`](https://godoc.org/github.com/giantswarm/apiextensions/pkg/apis/provider/v1alpha1#AzureConfig)

        - [`kvmconfig.provider.giantswarm.io`](https://godoc.org/github.com/giantswarm/apiextensions/pkg/apis/provider/v1alpha1#KVMConfig)


        Note that structure and style differ from the rest of the v4 API. Also note that

        the structure depends on the release version and changes can be expected frequently.
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
        - $ref: "#/components/parameters/ClusterIdPathParameter"
      responses:
        "200":
          description: Cluster status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GetClusterStatusResponse"
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
  "/v4/clusters/{cluster_id}/apps/":
    get:
      operationId: getClusterApps
      tags:
        - apps
      summary: Get cluster apps
      description: |
        Returns an array of apps installed on a given cluster.

        ### Example
        ```json
          [
            {
              "metadata": {
                "name": "my-awesome-prometheus",
              },

              "spec": {
                "catalog": "sample-catalog"
                "name": "prometheus-chart",
                "namespace": "giantswarm",
                "version": "0.2.0",
                "user_config": {
                  "configmap": {
                    "name": "prometheus-user-values",
                    "namespace": "123ab"
                  }
                }
              },

              "status": {
                "app_version": "1.0.0",
                "release": {
                  "last_deployed": "2019-04-08T12:34:00Z",
                  "status": "DEPLOYED"
                },
                "version": "0.2.0",
              }
            }
          ]
        ```
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
        - $ref: "#/components/parameters/ClusterIdPathParameter"
      responses:
        "200":
          description: Cluster apps
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GetClusterAppsResponse"
              examples:
                response:
                  value:
                    - metadata:
                        name: my-awesome-prometheus
                      spec:
                        catalog: sample-catalog
                        name: prometheus-chart
                        namespace: giantswarm
                        version: 0.2.0
                        user_config:
                          configmap:
                            name: prometheus-user-values
                            namespace: 123ab
                      status:
                        app_version: 1.0.0
                        release:
                          last_deployed: 2019-04-08T12:34:00Z
                          status: DEPLOYED
                        version: 0.2.0
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
  "/v4/clusters/{cluster_id}/apps/{app_name}/":
    delete:
      operationId: deleteClusterApp
      tags:
        - apps
      summary: Delete an app
      description: |
        This operation allows a user to delete an app.
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
        - $ref: "#/components/parameters/ClusterIdPathParameter"
        - $ref: "#/components/parameters/AppNamePathParameter"
      responses:
        "200":
          description: App deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: RESOURCE_DELETED
                    message: Your app 'acme' on 'adc23' has been deleted.
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        "404":
          description: App not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: App could not be deleted. (app with name 'my-awesome-app'
                      in cluster 'abc12' could not be found)
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
    put:
      operationId: createClusterApp
      tags:
        - apps
      summary: Install an app
      description: >
        Install an app on a tenant cluster by posting to this endpoint.


        The spec field represents the app we'll be installing, and so spec.name refers to

        the name of the chart that installs this app in the catalog.


        The response you get on a succesful create includes the status of the app. However

        since the App is still initialising and this is an asynchronous operation, it is

        likely that the fields in this status object will be all empty values.


        To check on the status of your app, perform a GET to /v4/clusters/{cluster_id}/apps/,

        and check the status field of the app.


        ### Example PUT request

        ```json
          {
            "spec": {
              "catalog": "sample-catalog",
              "name": "prometheus-chart",
              "namespace": "prometheus",
              "version": "0.2.0",
            }
          }
        ```


        ### About the user_config field in the response

        This field is not editable by you, but is set automatically by the API

        if a configmap named `{app_name}-user-values` exists in the tenant cluster

        namespace on the control plane.


        The `/v4/clusters/{cluster_id}/apps/{app_name}/config/` endpoints allows

        you to create such a configmap using this API.


        It is recommended to create your config before creating your app. This

        will result in a faster deploy.


        However, you can create your config after creating the app if you wish,

        this API will take care of setting the `user_config` field of the app

        correctly for you.


        ### Why can't I just set the `user_config` value myself?

        It simplifies usage while also being a security measure.


        Furthermore it is also a security measure and ensures that users of this

        API can't access arbitrary configmaps of the control plane.


        This API will only allow you to edit or access configmaps that adhere

        to a strict naming convention.
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
        - $ref: "#/components/parameters/ClusterIdPathParameter"
        - $ref: "#/components/parameters/AppNamePathParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V4CreateAppRequest"
        x-examples:
          application/json:
            spec:
              catalog: sample-catalog
              name: prometheus-chart
              namespace: prometheus
              version: 0.2.0
      responses:
        "200":
          description: Create cluster app
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4App"
              examples:
                response:
                  value:
                    metadata:
                      name: my-awesome-prometheus
                    spec:
                      catalog: sample-catalog
                      name: prometheus-chart
                      namespace: giantswarm
                      version: 0.2.0
                      user_config:
                        configmap:
                          name: prometheus-user-values
                          namespace: 123ab
                    status:
                      app_version: ""
                      release:
                        last_deployed: 0000-00-00T00:00:00Z
                        status: ""
                      version: ""
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: INVALID_INPUT
                    message: App could not be created. (invalid input)
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        "409":
          description: App already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: RESOURCE_ALREADY_EXISTS
                    message: An app with this name already exists.
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
    patch:
      operationId: modifyClusterApp
      tags:
        - apps
      summary: Modify an app
      description: >
        This operation allows you to modify an existing app.


        The following attributes can be modified:


        - `version`: Changing this field lets you upgrade or downgrade an app.


        `catalog`, `name`, `namespace`, and `user_config` are not editable. If you need to move or rename an app, you should instead delete the app and make it again.


        The request body must conform with the [JSON Patch Merge (RFC 7386)](https://tools.ietf.org/html/rfc7386) standard.

        Requests have to be sent with the `Content-Type: application/merge-patch+json` header.
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
        - $ref: "#/components/parameters/ClusterIdPathParameter"
        - $ref: "#/components/parameters/AppNamePathParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V4ModifyAppRequest"
        x-examples:
          application/merge-patch+json:
            spec:
              version: 0.3.0
      responses:
        "200":
          description: App modified
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4App"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: INVALID_INPUT
                    message: "The app could not be modified. (invalid input: name is
                      not an editable field)"
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        "404":
          description: App not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: "The app could not be modified. (not found: the app with
                      name 'my-great-app' could not be found)"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
  "/v4/clusters/{cluster_id}/apps/{app_name}/config/":
    get:
      operationId: getClusterAppConfig
      tags:
        - app configs
      summary: Get app config
      description: |
        This operation allows you to fetch the user values configmap associated
        with an app.
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
        - $ref: "#/components/parameters/ClusterIdPathParameter"
        - $ref: "#/components/parameters/AppNamePathParameter"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GetClusterAppConfigResponse"
            appication/json:
              examples:
                response:
                  value:
                    agent:
                      key: secret-key-here
                      endpointHost: saas-eu-west-1.instana.io
                      endpointPort: "443"
                    zone:
                      name: giantswarm-cluster
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        "404":
          description: App Config not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: Unable to show app config. (app with name 'my-awesome-app'
                      in cluster 'abc12' could not be found)
    put:
      operationId: createClusterAppConfig
      tags:
        - app configs
      summary: Create app config
      description: >
        This operation allows you to create a values configmap for a specific
        app. The app does

        not have to exist before hand.


        If the app does exist, this endpoint will ensure that the App CR gets it's

        user_config field set correctly.


        However, if the app exists and the user_config is already set to something,

        then this request will fail. You will in that case most likely want to

        update the config using the `PATCH /v4/clusters/{cluster_id}/apps/{app_name}/config/`

        endpoint.


        ### Example POST request

        ```json
          {
            "agent": {
              "key": "secret-key-here",
              "endpointHost": "saas-eu-west-1.instana.io",
              "endpointPort": "443",
            },
            "zone": {
              "name": "giantswarm-cluster"
            }
          }
        ```
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
        - $ref: "#/components/parameters/ClusterIdPathParameter"
        - $ref: "#/components/parameters/AppNamePathParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V4CreateAppConfigRequest"
        x-examples:
          appication/json:
            agent:
              key: secret-key-here
              endpointHost: saas-eu-west-1.instana.io
              endpointPort: "443"
            zone:
              name: giantswarm-cluster
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
            appication/json:
              examples:
                response:
                  value:
                    code: RESOURCE_CREATED
                    message: App config for 'my-awesome-app' on 'abc12' has been
                      created.
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: INVALID_INPUT
                    message: App config could not be created. (invalid input)
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        "409":
          description: App config already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: RESOURCE_ALREADY_EXISTS
                    message: A config for 'my-awesome-app' on 'abc12' already exists.
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
    delete:
      operationId: deleteClusterAppConfig
      tags:
        - app configs
      summary: Delete an app config
      description: >
        This operation allows a user to delete an app's user config if it has
        been named according to the convention of {app-name}-user-values and

        stored in the cluster ID namespace.


        Calling this endpoint will delete the ConfigMap, but it does not remove the reference to the ConfigMap in the (spec.user_config.configmap field) from the app.


        Do make sure you also update the app and remove the reference.


        The preferred order is to first remove the reference to the configmap by

        updating the app, and only then delete the configmap using this endpoint.
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
        - $ref: "#/components/parameters/ClusterIdPathParameter"
        - $ref: "#/components/parameters/AppNamePathParameter"
      responses:
        "200":
          description: App Config deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: RESOURCE_DELETED
                    message: App config for 'my-app' on 'abc12' has been deleted.
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        "404":
          description: App Config not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: The user config of app 'my-app' could not be deleted.
                      ('my-app' not found)
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
    patch:
      operationId: modifyClusterAppConfig
      tags:
        - app configs
      summary: Modify app config
      description: >
        This operation allows you to modify the values configmap for a specific
        app.

        It's only possible to modify app configs that have been named according to the convention of

        {app-name}-user-values and stored in the cluster ID namespace.


        The full values key of the configmap will be replaced by the JSON body

        of your request.


        ### Example PATCH request

        ```json
          {
            "agent": {
              "key": "a-new-key-here",
            }
          }
        ```


        If the configmap contained content like:


        ```json
          {
            "agent": {
              "key": "an-old-key-here",
              "admin": true,
            },
            "server": {
              "url": "giantswarm.io",
            }
          }
        ```


        Then the "server" and "admin" keys will be removed.
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
        - $ref: "#/components/parameters/ClusterIdPathParameter"
        - $ref: "#/components/parameters/AppNamePathParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V4CreateAppConfigRequest"
        x-examples:
          application/json:
            agent:
              key: a-new-key-here
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
            appication/json:
              examples:
                response:
                  value:
                    code: RESOURCE_UPDATED
                    message: App config for 'my-awesome-app' on 'abc12' has been
                      updated.
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: INVALID_INPUT
                    message: App config could not be created. (invalid input)
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
  /v4/organizations/:
    get:
      operationId: getOrganizations
      tags:
        - organizations
      summary: Get organizations
      description: |
        This operation allows to fetch a list of organizations the user is a
        member of. In the case of an admin user, the result includes all
        existing organizations.
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/V4OrganizationListItem"
              examples:
                response:
                  value:
                    - id: acme
                    - id: giantswarm
                    - id: testorg
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
  "/v4/organizations/{organization_id}/":
    get:
      operationId: getOrganization
      tags:
        - organizations
      summary: Get organization details
      description: |
        This operation fetches organization details.
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
        - $ref: "#/components/parameters/OrganizationIdPathParameter"
      responses:
        "200":
          description: Organization details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4Organization"
              examples:
                response:
                  value:
                    id: acme
                    members:
                      - email: user1@example.com
                      - email: user2@example.com
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        "404":
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: "The organization could not be found. (not found: the
                      organization with id 'acme' could not be found)"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
    put:
      operationId: addOrganization
      tags:
        - organizations
      summary: Create an organization
      description: |
        This operation allows a user to create an organization.
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
        - $ref: "#/components/parameters/OrganizationIdPathParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V4Organization"
        required: true
        x-examples:
          application/json:
            id: string
            members:
              - email: myself@example.com
              - email: colleague@example.com
      responses:
        "201":
          description: Organization created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4Organization"
              examples:
                response:
                  value:
                    id: acme
                    members:
                      - email: user1@example.com
                      - email: user2@example.com
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        "409":
          description: Organization already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: RESOURCE_ALREADY_EXISTS
                    message: The organization could not be created. (org already exists)
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
    patch:
      operationId: modifyOrganization
      tags:
        - organizations
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
        - $ref: "#/components/parameters/OrganizationIdPathParameter"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                members:
                  type: array
                  description: List of members that belong to this organization
                  items:
                    $ref: "#/components/schemas/V4OrganizationMember"
        required: true
        x-examples:
          application/merge-patch+json:
            members:
              - email: myself@example.com
      summary: Modify organization
      description: >
        This operation allows you to modify an existing organization. You must
        be

        a member of the organization or an admin in order to use this endpoint.


        The following attributes can be modified:


        - `members`: By modifying the array of members, members can be added to or removed from the organization


        The request body must conform with the [JSON Patch Merge (RFC 7386)](https://tools.ietf.org/html/rfc7386) standard.

        Requests have to be sent with the `Content-Type: application/merge-patch+json` header.


        The full request must be valid before it will be executed, currently this

        means every member you attempt to add to the organization must actually

        exist in the system. If any member you attempt to add is invalid, the entire

        patch operation will fail, no members will be added or removed, and an error message

        will explain which members in your request are invalid.
      responses:
        "200":
          description: Organization modified
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4Organization"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: INVALID_INPUT
                    message: "The organization could not be modified. (invalid input:
                      user 'invalid-email' does not exist or is invalid)"
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        "404":
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: "The organization could not be modified. (not found: the
                      organization with id 'acme' could not be found)"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
    delete:
      operationId: deleteOrganization
      tags:
        - organizations
      summary: Delete an organization
      description: >
        This operation allows a user to delete an organization that they are a
        member of.

        Admin users can delete any organization.
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
        - $ref: "#/components/parameters/OrganizationIdPathParameter"
      responses:
        "200":
          description: Organization deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: RESOURCE_DELETED
                    message: The organization with ID 'acme' has been deleted.
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        "404":
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: "The organization could not be deleted. (not found: the
                      organization with id 'acme' could not be found)"
        "409":
          description: Organization has credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: FAILURE
                    message: The organization cannot be deleted while it has
                      credentials attached to it.  Please contact Giant Swarm
                      support for help.
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
  "/v4/organizations/{organization_id}/credentials/":
    get:
      operationId: getCredentials
      tags:
        - organizations
      summary: Get credentials
      description: >
        Returns credentials for an organization, if available.

        For more information on credentials,

        see [Set credentials](#operation/addCredentials).


        Here is another paragraph.


        ### Example response body for AWS


        ```json

        [
          {
            "id": "a1b2c3",
            "provider": "aws",
            "aws": {
              "roles": {
                "admin": "arn:aws:iam::123456789012:role/GiantSwarmAdmin",
                "awsoperator": "arn:aws:iam::123456789012:role/GiantSwarmAWSOperator"
              }
            }
          }
        ]

        ```


        ### Example response body for Azure


        ```json

        [
          {
            "id": "a1b2c3",
            "provider": "azure",
            "azure": {
              "credential": {
                "client_id": "c93bf55e-5bf7-4966-ad2b-e6f6e7721d50",
                "subscription_id": "b388b7c7-4479-4040-9ac5-1e13edd6b1cd",
                "tenant_id": "3dd2e94a-92ba-434c-99be-32bb65864a99"
              }
            }
          }
        ]

        ```
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
        - $ref: "#/components/parameters/OrganizationIdPathParameter"
      responses:
        "200":
          description: Credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GetCredentialsResponse"
              examples:
                response:
                  value:
                    - id: a1b2c3
                      provider: azure
                      azure:
                        credential:
                          client_id: c93bf55e-5bf7-4966-ad2b-e6f6e7721d50
                          subscription_id: b388b7c7-4479-4040-9ac5-1e13edd6b1cd
                          tenant_id: 3dd2e94a-92ba-434c-99be-32bb65864a99
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
    post:
      operationId: addCredentials
      tags:
        - organizations
      summary: Set credentials
      description: >
        Add a set of credentials to the organization allowing the creation and

        operation of clusters within a cloud provider account/subscription.


        The actual type of these credentials depends on the cloud provider the

        installation is running on. AWS and Azure are currently supported.


        Credentials in an organization are immutable. Each organization can only

        have one set of credentials.


        Once credentials have been set for an organization, they are used for

        every new cluster that will be created for the organization.


        ### Example request body for AWS


        ```json

        {
          "provider": "aws",
          "aws": {
            "roles": {
              "admin": "arn:aws:iam::123456789012:role/GiantSwarmAdmin",
              "awsoperator": "arn:aws:iam::123456789012:role/GiantSwarmAWSOperator"
            }
          }
        }

        ```


        ### Example request body for Azure


        ```json

        {
          "provider": "azure",
          "azure": {
            "credential": {
              "client_id": "c93bf55e-5bf7-4966-ad2b-e6f6e7721d50",
              "secret_key": "720e38f7-3af4-463c-9313-abcdf2ead612",
              "subscription_id": "b388b7c7-4479-4040-9ac5-1e13edd6b1cd",
              "tenant_id": "3dd2e94a-92ba-434c-99be-32bb65864a99"
            }
          }
        }

        ```
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
        - $ref: "#/components/parameters/OrganizationIdPathParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V4AddCredentialsRequest"
        required: true
        x-examples:
          application/json:
            provider: aws
            aws:
              roles:
                admin: arn:aws:iam::123456789012:role/GiantSwarmAdmin
                awsoperator: arn:aws:iam::123456789012:role/GiantSwarmAWSOperator
      responses:
        "201":
          description: Credentials created
          headers:
            Location:
              description: URI of the new credentials resource
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: RESOURCE_CREATED
                    message: A new set of credentials has been created with ID '5d9h4'
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: RESOURCE_ALREADY_EXISTS
                    message: The organisation already has a set of credentials
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
  "/v4/organizations/{organization_id}/credentials/{credential_id}/":
    get:
      operationId: getCredential
      tags:
        - organizations
      summary: Get credential details
      description: >
        Returns details for a particular set of credentials, identified by its

        ID. The returned data does not contain any secrets (i. e.

        passphrase, secret key). For more information on credentials, see

        [Set credentials](#operation/addCredentials).


        ### Example response body for AWS


        ```json

        {
          "id": "a1b2c3",
          "provider": "aws",
          "aws": {
            "roles": {
              "admin": "arn:aws:iam::123456789012:role/GiantSwarmAdmin",
              "awsoperator": "arn:aws:iam::123456789012:role/GiantSwarmAWSOperator"
            }
          }
        }

        ```


        ### Example response body for Azure


        ```json

        {
          "id": "a1b2c3",
          "provider": "azure",
          "azure": {
            "credential": {
              "client_id": "c93bf55e-5bf7-4966-ad2b-e6f6e7721d50",
              "subscription_id": "b388b7c7-4479-4040-9ac5-1e13edd6b1cd",
              "tenant_id": "3dd2e94a-92ba-434c-99be-32bb65864a99"
            }
          }
        }

        ```
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
        - $ref: "#/components/parameters/OrganizationIdPathParameter"
        - $ref: "#/components/parameters/CredentialsIdPathParameter"
      responses:
        "200":
          description: Credentials details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GetCredentialResponse"
              examples:
                response:
                  value:
                    id: a1b2c3
                    provider: azure
                    azure:
                      credential:
                        client_id: c93bf55e-5bf7-4966-ad2b-e6f6e7721d50
                        subscription_id: b388b7c7-4479-4040-9ac5-1e13edd6b1cd
                        tenant_id: 3dd2e94a-92ba-434c-99be-32bb65864a99
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
  /v4/releases/:
    get:
      operationId: getReleases
      tags:
        - releases
      summary: Get releases
      description: |
        Lists all releases available for new clusters or for upgrading existing
        clusters. Might also serve as an archive to obtain details on older
        releases.
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
      responses:
        "200":
          description: Releases list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/V4ReleaseListItem"
              examples:
                response:
                  value:
                    - version: 1.14.9
                      timestamp: 2017-09-21T08:14:03.37759Z
                      changelog:
                        - component: kubernetes
                          description: Security fixes
                        - component: calico
                          description: Security fixes
                      components:
                        - name: kubernetes
                          version: 1.5.8
                        - name: calico
                          version: 0.9.1
                      active: false
                    - version: 2.8.4
                      timestamp: 2017-11-11T12:24:56.59969Z
                      changelog:
                        - component: calico
                          description: Bugfix
                      components:
                        - name: kubernetes
                          version: 1.7.3
                        - name: calico
                          version: 1.1.1
                      active: true
        "401":
          $ref: "#/components/responses/V4Generic401Response"
  /v5/clusters/:
    post:
      operationId: addClusterV5
      x-internal: true
      tags:
        - clusters
      summary: Create cluster (v5)
      description: |
        Allows to create most recent clusters on AWS installations.

        ### Node pools

        In the Giant Swarm API v5, worker nodes are grouped into pools of worker
        nodes where all nodes share the same configuration.

        When creating a cluster without submitting the `nodepools` attribute,
        or with its value being an empty array, one node pool with default
        configuration will be created.

        Node pools can be created, deleted and modified during the entire
        lifetime of a cluster.

        See
        [node pools](#tag/nodepools) and
        [Create node pool](#operation/addNodePool) for details.
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V5AddClusterRequest"
        description: New cluster definition
        required: true
        x-examples:
          application/json:
            owner: myteam
            release_version: 7.1.0
            name: Production cluster using k8s 1.14
            master:
              availability_zone: europe-central-1c
            nodepools:
              - name: General purpose
                availability_zones:
                  number: 2
                scaling:
                  min: 3
                  max: 30
                node_spec:
                  aws:
                    instance_type: m4.2xlarge
      responses:
        "201":
          description: Cluster created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V5ClusterDetailsResponse"
              examples:
                response:
                  value:
                    id: n45do
                    owner: myteam
                    release_version: 7.1.0
                    name: Production cluster using k8s 1.14
                    master:
                      availability_zone: europe-central-1c
                    nodepools:
                      - name: General purpose
                        availability_zones:
                          - europe-central-1a
                          - europe-central-1c
                        scaling:
                          min: 3
                          max: 30
                        node_spec:
                          aws:
                            instance_type: m4.2xlarge
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
  "/v5/clusters/{cluster_id}/":
    get:
      operationId: getClusterV5
      x-internal: true
      tags:
        - clusters
      summary: Get cluster details (v5)
      description: |
        Allows to retrieve cluster details on AWS installations.
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
        - $ref: "#/components/parameters/ClusterIdPathParameter"
      responses:
        "200":
          description: Cluster details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V5ClusterDetailsResponse"
              examples:
                response:
                  value:
                    id: 7g4di
                    create_date: 2019-06-01T12:00:13.949270905Z
                    api_endpoint: https://api.k8s.7g4di.example.com
                    name: All purpose cluster
                    release_version: 8.0.0
                    owner: acme
                    credential_id: a1b2c
                    master:
                      availability_zone: europe-west-1c
                    conditions:
                      - last_transition_time: 2019-03-25T17:10:09.333633991Z
                        condition: Created
                    versions:
                      - last_transition_time: 2019-03-25T17:10:09.333633991Z
                        version: 1.2.3
        "301":
          description: Version mismatch
          headers:
            Location:
              description: |
                URI of the new path to use for retrying the request, as the one
                used is not usable for this cluster.
              schema:
                type: string
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        "404":
          description: Cluster not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: The cluster with ID 'wqtlq' could not be found, or perhaps
                      you do not have access to it. Please make sure the cluster
                      ID is correct, and that you are a member of the
                      organization that it belongs to.
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
    patch:
      operationId: modifyClusterV5
      x-internal: true
      tags:
        - clusters
      summary: Modify cluster (v5)
      description: |
        Allows to change cluster properties on AWS installations.
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
        - $ref: "#/components/parameters/ClusterIdPathParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V5ModifyClusterRequest"
        description: Merge-patch body
        required: true
        x-examples:
          application/json:
            name: New cluster name
      responses:
        "200":
          description: Cluster modified
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V5ClusterDetailsResponse"
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        "404":
          description: Cluster not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: The cluster with ID 'wqtlq' could not be found, or perhaps
                      you do...
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
  "/v5/clusters/{cluster_id}/nodepools/":
    get:
      operationId: getNodePools
      x-internal: true
      tags:
        - nodepools
      summary: Get node pools
      description: |
        Returns a list of node pools from a given cluster.
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
        - $ref: "#/components/parameters/ClusterIdPathParameter"
      responses:
        "200":
          description: Node pools list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V5GetNodePoolsResponse"
              examples:
                response:
                  value:
                    - id: a7r
                      name: Batch number crunching
                      availability_zones:
                        - eu-west-1d
                      scaling:
                        min: 2
                        max: 5
                      node_spec:
                        aws:
                          instance_type: p3.8xlarge
                        volume_sizes_gb:
                          docker: 100
                          kubelet: 100
                      status:
                        nodes: 4
                        nodes_ready: 3
                    - id: 6fe
                      name: Application servers
                      availability_zones:
                        - eu-west-1a
                        - eu-west-1b
                        - eu-west-1c
                      scaling:
                        min: 3
                        max: 15
                      node_spec:
                        aws:
                          instance_type: p3.2xlarge
                        volume_sizes_gb:
                          docker: 100
                          kubelet: 100
                      status:
                        nodes: 11
                        nodes_ready: 11
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        "404":
          description: Cluster not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: The cluster with ID '6drr3' could not be found...
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
    post:
      operationId: addNodePool
      x-internal: true
      tags:
        - nodepools
      summary: Create node pool
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
        - $ref: "#/components/parameters/ClusterIdPathParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V5AddNodePoolRequest"
        x-examples:
          application/json:
            name: My general purpose node pool
            availability_zones:
              number: 2
            scaling:
              min: 3
              max: 10
            node_spec:
              aws:
                instance_type: m4.2xlarge
      description: |
        This allows to add a node pool to a cluster.

        Some, but not all, node pool configuration can be changed after
        creation. The following settings will have a permanent effect:

        - `availability_zones`
        - `instance_type`
      responses:
        "201":
          description: Node pool created
          headers:
            Location:
              description: URI of the new node pool resource
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V5GetNodePoolResponse"
              examples:
                response:
                  value:
                    id: a1b
                    name: My general purpose node pool
                    availability_zones:
                      - eu-central-1a
                      - eu-central-1c
                    scaling:
                      min: 3
                      max: 10
                    node_spec:
                      aws:
                        instance_type: m4.2xlarge
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: INVALID_INPUT
                    message: The node pool could not be created. (Invalid name, length
                      is greater than maximum length of 100.)
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        "404":
          description: Cluster not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: The cluster with ID '6drr3' could not be found...
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
  "/v5/clusters/{cluster_id}/nodepools/{nodepool_id}/":
    get:
      operationId: getNodePool
      x-internal: true
      tags:
        - nodepools
      summary: Get node pool details
      description: |
        Returns all available details on a specific node pool.
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
        - $ref: "#/components/parameters/ClusterIdPathParameter"
        - $ref: "#/components/parameters/NodePoolIdPathParameter"
      responses:
        "200":
          description: Node pool details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V5GetNodePoolResponse"
              examples:
                response:
                  value:
                    id: a3k
                    name: Node pool name
                    availability_zones:
                      - europe-central-1a
                    scaling:
                      min: 3
                      max: 5
                    subnet: 10.1.0.0/24
                    node_spec:
                      aws:
                        instance_type: m4.large
                      volume_sizes_gb:
                        docker: 100
                        kubelet: 100
                    status:
                      nodes: 4
                      nodes_ready: 3
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        "404":
          description: Cluster not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: The cluster with ID '6drr3' could not be found...
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
    patch:
      operationId: modifyNodePool
      x-internal: true
      tags:
        - nodepools
      summary: Modify node pool
      description: |
        Allows to rename a node pool or change its scaling settings.
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
        - $ref: "#/components/parameters/ClusterIdPathParameter"
        - $ref: "#/components/parameters/NodePoolIdPathParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V5ModifyNodePoolRequest"
        description: Merge-patch body
        required: true
        x-examples:
          application/merge-patch+json:
            scaling:
              min: 5
              max: 30
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V5GetNodePoolResponse"
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        "404":
          description: Cluster not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: The cluster with ID '6drr3' could not be found...
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
    delete:
      operationId: deleteNodePool
      x-internal: true
      tags:
        - nodepools
      summary: Delete node pool
      parameters:
        - $ref: "#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
        - $ref: "#/components/parameters/XRequestIDHeader"
        - $ref: "#/components/parameters/XGiantSwarmActivityHeader"
        - $ref: "#/components/parameters/XGiantSwarmCmdLineHeader"
        - $ref: "#/components/parameters/ClusterIdPathParameter"
        - $ref: "#/components/parameters/NodePoolIdPathParameter"
      description: |
        Triggers the deletion of a node pool.

        Nodes in the pool will first be cordoned and drained. Note that it is
        your responsibililty to make sure that workloads using the node pool can
        be scheduled elsewhere. We recommend to double-check the available
        capacity of remaining node pools, as well as any node selectors and
        taints. Also you can do the draining yourself before issuing the
        delete request, to observe the outcome. Use

        ```
        kubectl drain nodes -l giantswarm.nodepool_id= ...
        ```

        TODO: adapt the command for correct label syntax
      responses:
        "202":
          description: Deleting node pool
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: RESOURCE_DELETION_STARTED
                    message: The cluster with ID 'wqtlq' is being deleted.
        "401":
          $ref: "#/components/responses/V4Generic401Response"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: The node pool with ID 'wqt' could not be found...
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4GenericResponse"
components:
  parameters:
    RequiredGiantSwarmAuthorizationHeader:
      name: Authorization
      in: header
      required: true
      description: |
        As described in the [authentication](#section/Authentication) section
      schema:
        type: string
    AppNamePathParameter:
      name: app_name
      in: path
      required: true
      description: App Name
      schema:
        type: string
    ClusterIdPathParameter:
      name: cluster_id
      in: path
      required: true
      description: Cluster ID
      schema:
        type: string
    CredentialsIdPathParameter:
      name: credential_id
      in: path
      required: true
      description: Unique ID of a credential set
      schema:
        type: string
    NodePoolIdPathParameter:
      name: nodepool_id
      in: path
      required: true
      description: Node Pool ID
      schema:
        type: string
    UserEmailPathParameter:
      name: email
      in: path
      required: true
      description: The user's email address
      schema:
        type: string
    OrganizationIdPathParameter:
      name: organization_id
      in: path
      required: true
      description: |
        An ID for the organization.
        This ID must be unique and match this regular
        expression: ^[a-z0-9_]{4,30}$
      schema:
        type: string
    XRequestIDHeader:
      name: X-Request-ID
      in: header
      required: false
      description: |
        A randomly generated key that can be used to track a request throughout
        services of Giant Swarm.
      schema:
        type: string
    XGiantSwarmActivityHeader:
      name: X-Giant-Swarm-Activity
      in: header
      required: false
      description: |
        Name of an activity to track, like "list-clusters". This allows to
        analyze several API requests sent in context and gives an idea on
        the purpose.
      schema:
        type: string
    XGiantSwarmCmdLineHeader:
      name: X-Giant-Swarm-CmdLine
      in: header
      required: false
      description: |
        If activity has been issued by a CLI, this header can contain the
        command line
      schema:
        type: string
  responses:
    V4Generic401Response:
      description: Permission denied
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/V4GenericResponse"
          examples:
            response:
              value:
                code: PERMISSION_DENIED
                message: The requested resource cannot be accessed using the provided
                  authentication details.
  securitySchemes:
    AuthorizationHeaderToken:
      description: |
        Clients authenticate by passing an auth token via the `Authorization`
        header with the format

        ```
        Authorization: giantswarm
        ````

        Auth tokens can be obtained using the
        [createAuthToken](#operation/createAuthToken) operation.

        For Giant Swarm staff who are authenticating using SSO,
        pass the auth token via the `Authorization` header with a value of the
        format `Bearer `.
      type: apiKey
      name: Authorization
      in: header
  schemas:
    V4GenericResponse:
      type: object
      properties:
        message:
          type: string
          description: A human readable message
        code:
          type: string
          description: >
            A machine readable [response
            code](https://github.com/giantswarm/api-spec/blob/master/details/RESPONSE_CODES.md)
            like e. g. `INVALID_CREDENTIALS`
    V4AppCatalogsResponse:
      type: array
      items:
        type: object
        properties:
          metadata:
            type: object
            properties:
              name:
                description: A URL friendly identifier for the catalog.
                type: string
              labels:
                description: The labels that are set on this app catalog
                type: object
                properties:
                  application.giantswarm.io/catalog-type:
                    type: string
                  app-operator.giantswarm.io/version:
                    type: string
          spec:
            type: object
            properties:
              title:
                description: A display friendly title for this catalog.
                type: string
              description:
                description: A description of the catalog.
                type: string
              logoURL:
                description: A URL to a logo representing this catalog.
                type: string
              storage:
                description: Contains information on where to find the full catalog, and
                  what type of catalog it is.
                type: object
                properties:
                  URL:
                    description: A URL where clients can download the full catalog.
                    type: string
                  type:
                    description: The format of this catalog. (Currently only helm is
                      supported.)
                    type: string
    V4InfoResponse:
      type: object
      required:
        - general
      properties:
        general:
          description: General information
          type: object
          required:
            - availability_zones
          properties:
            installation_name:
              description: Unique name of the installation
              type: string
            provider:
              description: The technical provider used in this installation. Either "kvm",
                "aws", or "azure".
              type: string
            datacenter:
              description: Identifier of the datacenter or cloud provider region, e. g.
                "eu-west-1"
              type: string
            availability_zones:
              type: object
              description: Number of availability zones which a cluster can be spread
                across.
              required:
                - max
                - default
              properties:
                max:
                  description: Number of availability zones in the region of this
                    installation.
                  type: integer
                default:
                  description: Default number of availability zones for a cluster.
                  type: integer
        stats:
          type: object
          description: Statistics about the installation
          properties:
            cluster_creation_duration:
              type: object
              description: Duration of cluster creation, summarized.
              properties:
                median:
                  type: integer
                  description: Median of the value distribution
                p25:
                  type: integer
                  description: 25th percentile of the value distribution
                p75:
                  type: integer
                  description: 75th percentile of the value distribution
        workers:
          description: Information related to worker nodes
          type: object
          properties:
            count_per_cluster:
              description: Number of workers per cluster
              type: object
              properties:
                max:
                  description: Maximum number of worker a cluster can have. Might be null
                    when unknown.
                  type: number
                default:
                  description: Default number of workers in a new cluster will have, if not
                    specifiec otherwise
                  type: number
            instance_type:
              description: Instance types to be used for worker nodes. Only available for
                AWS clusters.
              type: object
              properties:
                options:
                  description: List of available instance types
                  type: array
                  items:
                    type: string
                default:
                  description: The instance type used in new cluster, if not specified
                  type: string
            vm_size:
              description: Azure Virtual Machine size to be used for worker nodes. Only
                available for Azure clusters.
              type: object
              properties:
                options:
                  description: List of available instance types
                  type: array
                  items:
                    type: string
                default:
                  description: The instance type used in new cluster, if not specified
                  type: string
    V4AddClusterRequest:
      type: object
      required:
        - owner
      description: Request model for creating a new cluster
      properties:
        owner:
          type: string
          description: Name of the organization owning the cluster
        name:
          type: string
          description: Cluster name
        release_version:
          type: string
          description: |
            The [release](https://docs.giantswarm.io/api/#tag/releases) version
            to use in the new cluster
        availability_zones:
          description: |
            Number of availability zones a cluster should be spread across. The
            default is provided via the [info](#operation/getInfo) endpoint.
          type: integer
        scaling:
          type: object
          description: >
            Attributes specific to cluster node scaling on KVM and Azure. To
            have

            full control of the cluster size, min and max can be set to the same

            value. If only `min` or only `max` is specified, `min` and `max` will

            be set equally. Not available on AWS.
          properties:
            min:
              type: integer
              description: |
                Minimum number of cluster nodes
            max:
              type: integer
              description: |
                Maximum number of cluster nodes
        workers:
          type: array
          description: |
            Worker node definition on KVM and Azure. If present, the first item
            of the array is expected to contain the specification for all worker
            nodes. Not available on AWS.
          items:
            $ref: "#/components/schemas/V4NodeDefinition"
    V4ModifyClusterRequest:
      type: object
      description: Request body for cluster modification
      properties:
        name:
          type: string
          description: Name for the cluster
        owner:
          type: string
          description: Name of the organization owning the cluster
        release_version:
          type: string
          description: Release version to use after an upgrade
        scaling:
          type: object
          description: |
            Attributes specific to cluster node scaling. To have full control of
            the cluster size, min and max can be set to the same value.
          properties:
            min:
              type: integer
              description: |
                Minimum number of cluster nodes
            max:
              type: integer
              description: |
                Maximum number of cluster nodes
        workers:
          type: array
          description: Worker node array (deprecated)
          items:
            $ref: "#/components/schemas/V4NodeDefinition"
    V4ClusterDetailsResponse:
      type: object
      description: Response model showing details of a cluster
      properties:
        id:
          type: string
          description: Unique cluster identifier
        api_endpoint:
          type: string
          description: URI of the Kubernetes API endpoint
        create_date:
          type: string
          description: Date/time of cluster creation
        owner:
          type: string
          description: Name of the organization owning the cluster
        name:
          type: string
          description: Cluster name
        credential_id:
          type: string
          description: >
            ID of the credentials used to operate the cluster (only on AWS and

            Azure). See [Set credentials](#operation/addCredentials) for details.
        release_version:
          type: string
          description: |
            The [release](https://docs.giantswarm.io/api/#tag/releases) version
            currently running this cluster.
        scaling:
          type: object
          description: |
            Attributes specific to cluster node scaling as set during cluster
            creation or cluster scaling.
          properties:
            min:
              type: integer
              description: |
                Minimum number of cluster nodes as configured
            max:
              type: integer
              description: |
                Maximum number of cluster nodes as configured
        availability_zones:
          description: List of availability zones a cluster is spread across.
          type: array
          items:
            description: Name of the availability zone
            type: string
        workers:
          description: Information about worker nodes in the cluster (deprecated)
          type: array
          items:
            $ref: "#/components/schemas/V4NodeDefinition"
        kvm:
          type: object
          description: Attributes specific to clusters running on KVM (on-prem)
            installations.
          properties:
            port_mappings:
              type: array
              description: >
                Reveals the ports on the control plane that are mapped to this
                tenant cluster's ingress

                and which protocol that port supports. Only shown and relevant on our on-prem KVM clusters.
              items:
                type: object
                properties:
                  port:
                    description: >
                      The port on the control plane that will forward traffic to
                      the tenant cluster
                    type: integer
                  protocol:
                    description: |
                      The protocol this port mapping is made for.
                    type: string
    V4NodeDefinition:
      type: object
      properties:
        aws:
          type: object
          description: |
            Attributes specific to nodes running on Amazon Web Services (AWS)
          properties:
            instance_type:
              type: string
              description: |
                EC2 instance type name. Must be the same for all worker nodes
                of a cluster.
        azure:
          type: object
          description: |
            Attributes specific to nodes running on Microsoft Azure
          properties:
            vm_size:
              type: string
              description: >
                Azure Virtual Machine size. Must be the same for all worker
                nodes

                of a cluster.
        memory:
          type: object
          properties:
            size_gb:
              type: number
              description: RAM size in GB. Can be an integer or float.
        storage:
          type: object
          properties:
            size_gb:
              type: number
              description: Node storage size in GB. Can be an integer or float.
        cpu:
          type: object
          properties:
            cores:
              type: integer
              description: Number of CPU cores
        labels:
          type: object
          additionalProperties: true
    V4CreateAppRequest:
      type: object
      description: A part of the App CR that we create behind the scenes
      properties:
        spec:
          type: object
          required:
            - name
            - namespace
            - version
            - catalog
          properties:
            name:
              type: string
              description: Name of the chart that should be used to install this app
            namespace:
              type: string
              description: Namespace that this app will be installed to
            version:
              type: string
              description: Version of the chart that should be used to install this app
            catalog:
              type: string
              description: The catalog where the chart for this app can be found
    V4ModifyAppRequest:
      type: object
      description: The fields that are editable when trying to modify an app
      properties:
        spec:
          type: object
          properties:
            version:
              type: string
              description: Version of the chart that should be used to install this app
    V4App:
      type: object
      properties:
        metadata:
          type: object
          properties:
            name:
              type: string
              description: The identifier you set when creating this app
        spec:
          type: object
          properties:
            name:
              type: string
              description: Name of the chart that was used to install this app
            namespace:
              type: string
              description: Namespace that this app is installed to
            version:
              type: string
              description: Version of the chart that was used to install this app
            catalog:
              type: string
              description: The catalog that this app came from
            user_config:
              $ref: "#/components/schemas/V4AppSpecUserConfigConfigMap"
        status:
          type: object
          properties:
            app_version:
              type: string
              description: Version of the installed app
            version:
              type: string
              description: Version of the chart that was used to install this app
            release:
              type: object
              properties:
                last_deployed:
                  type: string
                  description: Date and time that the app was last last deployed
                status:
                  type: string
                  description: "A string representing the status of the app. (Can be:
                    empty, DEPLOYED or FAILED)"
    V4AppSpecUserConfigConfigMap:
      type: object
      description: User definable configuration to be applied when the app is deployed
      properties:
        configmap:
          type: object
          properties:
            name:
              type: string
              description: Name of the config map containing values to apply, e.g.
                prometheus-user-values
            namespace:
              type: string
              description: Namespace of the values config map on the control plane, e.g.
                123ab
    V4GetClusterAppsResponse:
      type: array
      description: Array of apps
      items:
        $ref: "#/components/schemas/V4App"
    V4GetClusterAppConfigResponse:
      type: object
      description: The values configmap for a given app returned as a yaml file
      additionalProperties: true
    V4CreateAppConfigRequest:
      type: object
      description: A part of the App CR that we create behind the scenes
      additionalProperties: true
    V4GetClusterStatusResponse:
      type: object
      description: Object about a cluster's current state
      additionalProperties: true
    V4GetKeyPairsResponse:
      type: array
      description: Array of sparse key pair objects
      items:
        type: object
        properties:
          id:
            type: string
            description: Unique identifier of the key pair
          description:
            type: string
            description: Free text information about the key pair
          ttl_hours:
            type: integer
            description: Expiration time (from creation) in hours
          create_date:
            type: string
            description: Date/time of creation
          common_name:
            type: string
            description: The common name of the certificate subject.
          certificate_organizations:
            type: string
            description: The certificate subject's `organization` fields.
    V4AddKeyPairRequest:
      type: object
      required:
        - description
      properties:
        description:
          type: string
          description: Free text information about the key pair
        ttl_hours:
          type: integer
          format: int32
          description: Expiration time (from creation) in hours
        cn_prefix:
          type: string
          description: The common name prefix of the certificate subject. This only allows
            characters that are usable in domain names (`a-z`, `0-9`, and `.-`,
            where `.-` must not occur at either the start or the end).
        certificate_organizations:
          type: string
          description: |
            This will set the certificate subject's `organization` fields.
            Use a comma seperated list of values.
    V4AddKeyPairResponse:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the key pair
        description:
          type: string
          description: Free text information about the key pair
        ttl_hours:
          type: integer
          description: Expiration time (from creation) in hours
        create_date:
          type: string
          description: Date/time of creation
        certificate_authority_data:
          type: string
          description: PEM-encoded CA certificate of the cluster
        client_key_data:
          type: string
          description: PEM-encoded RSA private key
        client_certificate_data:
          type: string
          description: PEM-encoded certificate
    V4Organization:
      type: object
      properties:
        id:
          type: string
          description: Unique name/identifier of the organization
        members:
          type: array
          description: List of members that belong to this organization
          items:
            $ref: "#/components/schemas/V4OrganizationMember"
    V4OrganizationListItem:
      type: object
      properties:
        id:
          type: string
          description: Unique name/identifier of the organization
    V4OrganizationMember:
      type: object
      properties:
        email:
          type: string
          description: Email address of the user
    V4UserListItem:
      type: object
      properties:
        email:
          type: string
          description: Email address of the user
        created:
          type: string
          description: The date and time that this account was created
        expiry:
          type: string
          description: The date and time when this account will expire
    V4ClusterListItem:
      type: object
      properties:
        id:
          type: string
          description: Unique cluster identifier
        create_date:
          type: string
          description: Date/time of cluster creation
        name:
          type: string
          description: Cluster name
        owner:
          type: string
          description: Name of the organization owning the cluster
        release_version:
          type: string
          description: The semantic version number of this cluster
        path:
          type: string
          description: API path of the cluster resource
    V4ReleaseListItem:
      type: object
      required:
        - version
        - timestamp
        - changelog
        - components
      properties:
        version:
          type: string
          description: The semantic version number
        timestamp:
          type: string
          description: Date and time of the release creation
        active:
          type: boolean
          description: |
            If true, the version is available for new clusters and cluster
            upgrades. Older versions become unavailable and thus have the
            value `false` here.
        changelog:
          description: |
            Structured list of changes in this release, in comparison to the
            previous version, with respect to the contained components.
          type: array
          items:
            type: object
            properties:
              component:
                type: string
                description: |
                  If the changed item was a component, this attribute is the
                  name of the component.
              description:
                type: string
                description: Human-friendly description of the change
        components:
          description: |
            List of components and their version contained in the release
          type: array
          items:
            type: object
            required:
              - name
              - version
            properties:
              name:
                type: string
                description: Name of the component
              version:
                type: string
                description: Version number of the component
    V4CreateUserRequest:
      type: object
      required:
        - password
      description: Request model for creating a new user
      properties:
        password:
          type: string
          description: A Base64 encoded password
        expiry:
          type: string
          description: The date and time when this account will expire
    V4ModifyUserRequest:
      type: object
      description: Request model for modifying a specific user
      properties:
        email:
          type: string
          description: New email address
        expiry:
          type: string
          description: New expiry date. (Only editable by admins)
    V4ModifyUserPasswordRequest:
      type: object
      required:
        - new_password_base64
      description: Request model for modifying a user's password
      properties:
        current_password_base64:
          type: string
          description: Current password encoded in Base64. Not required for admins
        new_password_base64:
          type: string
          description: New password encoded in Base64
    V4AddCredentialsRequest:
      type: object
      required:
        - provider
      description: Request model for adding a set of credentials
      properties:
        provider:
          type: string
        aws:
          type: object
          description: Credentials specific to an AWS account
          required:
            - roles
          properties:
            roles:
              type: object
              description: IAM roles to assume by certain entities
              required:
                - awsoperator
                - admin
              properties:
                admin:
                  type: string
                  description: ARN of the IAM role to assume by Giant Swarm support staff
                awsoperator:
                  type: string
                  description: ARN of the IAM role to assume by the software operating
                    clusters
        azure:
          type: object
          description: Credentials specific to an Azure service principal
          required:
            - credential
          properties:
            credential:
              type: object
              description: Service principal credential
              required:
                - client_id
                - secret_key
                - subscription_id
                - tenant_id
              properties:
                client_id:
                  type: string
                  description: Client ID of the service principal
                secret_key:
                  type: string
                  description: Secret key of the service principal
                subscription_id:
                  type: string
                  description: Azure subscription ID
                tenant_id:
                  type: string
                  description: Tenant ID of the Azure subscription
    V4GetCredentialResponse:
      type: object
      description: Response model for getting details on a set of credentials
      properties:
        id:
          type: string
          description: Unique ID of the credentials
        provider:
          type: string
          description: Either 'aws' or 'azure'
        aws:
          type: object
          description: Credentials specific to an AWS account
          properties:
            roles:
              type: object
              description: IAM roles to assume by certain entities
              properties:
                admin:
                  type: string
                  description: ARN of the IAM role Giant Swarm support staff will use
                awsoperator:
                  type: string
                  description: ARN of the IAM role assumed by the software operating the
                    clusters
        azure:
          type: object
          description: Credentials specific to an Azure service principal
          properties:
            credential:
              type: object
              description: Service principal credential
              properties:
                client_id:
                  type: string
                  description: Client ID of the service principal
                subscription_id:
                  type: string
                  description: Azure subscription ID
                tenant_id:
                  type: string
                  description: Tenant ID of the Azure subscription
    V4GetCredentialsResponse:
      type: array
      description: |
        List of credential sets for an organization. As of now, this can contain
        either zero or one items.
      items:
        $ref: "#/components/schemas/V4GetCredentialResponse"
    V4CreateAuthTokenRequest:
      type: object
      properties:
        email:
          type: string
          description: Your email address
        password_base64:
          type: string
          description: Your password as a base64 encoded string
    V4CreateAuthTokenResponse:
      type: object
      properties:
        auth_token:
          type: string
          description: The newly created API token
    V5GetNodePoolsResponse:
      type: array
      items:
        $ref: "#/components/schemas/V5GetNodePoolResponse"
    V5AddNodePoolRequest:
      description: |
        Request body structure for creating a node pool
      type: object
      properties:
        name:
          description: >
            Node pool name. _(Length between 1-100, cannot contain control codes
            such as newline.)_
          type: string
        availability_zones:
          description: >
            Specifies how the nodes of a pool are spread over availability
            zones.

            The object must contain either the `number` attribute or the `zones`

            attribute, but not both.

            The maximum `number` of availbility zones is the same as that found

            under `general.availability_zones.max` from the `/v4/info/` endpoint.

            When not given, availability zones assignment is handled automatically.
          type: object
          properties:
            number:
              type: integer
              description: |
                Number of zones to use. If given, the zones are picked
                automatically. _(Maximum limit of 4 supported.)_
            zones:
              type: array
              description: >
                Names of the availability zones to use. _(Must be same region as
                the cluster.)_
              items:
                type: string
        scaling:
          description: >
            Attributes specific to cluster node scaling. To have full control of

            the cluster size, min and max can be set to the same value, however `max`

            must be greater or equal to `min`. If only `min` or only `max` is specified,

            `min` and `max` will be set equally.
          type: object
          properties:
            min:
              description: Minimum number of nodes in the pool.
              type: integer
            max:
              description: Maximum number of nodes in the pool.
              type: integer
        node_spec:
          $ref: "#/components/schemas/V5AddNodePoolRequestNodeSpec"
    V5AddNodePoolRequestNodeSpec:
      type: object
      properties:
        aws:
          type: object
          description: |
            Attributes specific to the AWS provider
          properties:
            instance_type:
              type: string
              description: >
                EC2 instance type to use for all nodes in the node pool.
                _(Validated against available instance types.)_
    V5GetNodePoolResponseNodeSpec:
      type: object
      properties:
        aws:
          type: object
          description: |
            Attributes specific to the AWS provider
          properties:
            instance_type:
              type: string
              description: |
                EC2 instance type used by all nodes in this pool
        volume_sizes_gb:
          type: object
          properties:
            docker:
              description: |
                Size of the Docker volume, used to store docker images and
                overlay file system data, in GB.
              type: integer
            kubelet:
              description: |
                Size of the kubelet volume of the worker, used e. g. for
                volumes of type EmptyDir, in GB.
              type: integer
    V5GetNodePoolResponse:
      type: object
      properties:
        id:
          description: Node pool identifier. Unique within a tenant cluster.
          type: string
        name:
          description: Node pool name
          type: string
        availability_zones:
          description: |
            Names of the availability zones used by the nodes of this pool.
          type: array
          items:
            description: Name of the availability zone
            type: string
        scaling:
          description: |
            Scaling range of the node pool.
            If `min` and `max` differ, the node pool is scaled automatically.
            If both have the same value, the cluster size is pinned.
          type: object
          properties:
            min:
              description: Minimum number of nodes in the pool
              type: integer
            max:
              description: Maximum number of nodes in the pool
              type: integer
        subnet:
          description: IP address block used by the node pool
          type: string
        node_spec:
          $ref: "#/components/schemas/V5GetNodePoolResponseNodeSpec"
        status:
          description: Information on the current size and status of the node pool
          type: object
          properties:
            nodes:
              description: Desired number of nodes in the pool
              type: integer
            nodes_ready:
              description: Number of nodes in state NodeReady
              type: integer
    V5AddClusterRequest:
      type: object
      required:
        - owner
      properties:
        owner:
          type: string
          description: |
            Name of the organization owning the cluster
        name:
          type: string
          description: Cluster name
        release_version:
          type: string
          description: |
            The [release](https://docs.giantswarm.io/api/#tag/releases) version
            to use in the new cluster. If not given, the latest release will be
            used.
        master:
          type: object
          description: >
            Configuration regarding the master node. If not given, the master
            node

            will be placed automatically.
          properties:
            availability_zone:
              type: string
              description: |
                Name of the availability zone to use for the master node. If not
                given, the master node will be placed automatically.
        nodepools:
          description: |
            Specification of node pools to be created immediately with the
            cluster.
          type: array
          items:
            $ref: "#/components/schemas/V5AddNodePoolRequest"
    V5ClusterDetailsResponse:
      type: object
      properties:
        id:
          type: string
          description: Unique cluster identifier
        api_endpoint:
          type: string
          description: URI of the Kubernetes API endpoint
        create_date:
          type: string
          description: Date/time of cluster creation
        owner:
          type: string
          description: |
            Name of the organization owning the cluster
        name:
          type: string
          description: Cluster name
        credential_id:
          type: string
          description: |
            ID of the credentials used to operate the cluster. See
            [Set credentials](#operation/addCredentials) for details.
        release_version:
          type: string
          description: |
            The [release](https://docs.giantswarm.io/api/#tag/releases) version
            used by the cluster
        master:
          type: object
          description: |
            Information about the master node
          properties:
            availability_zone:
              type: string
              description: |
                Name of the availability zone the master node is placed in
        conditions:
          type: array
          description: List of conditions the cluster has gone through
          items:
            type: object
            properties:
              last_transition_time:
                type: string
                description: Date and time when the cluster transitioned into this condition
              condition:
                type: string
                description: A string describing the condition, e. g. 'Created'
        versions:
          type: array
          items:
            type: object
            properties:
              last_transition_time:
                type: string
                description: Date and time when the cluster got created with or upgrated to
                  this version
              version:
                type: string
                description: Semantic version number
    V5ModifyClusterRequest:
      type: object
      description: Request model for cluster modification
      properties:
        name:
          type: string
          description: New cluster name
        release_version:
          type: string
          description: Release version to upgrade to
    V5ModifyNodePoolRequest:
      type: object
      description: Request body for node pool modification
      properties:
        name:
          type: string
          description: New name of the node pool
        scaling:
          description: >
            Attributes specific to node pool scaling. To have full control of

            the cluster size, min and max can be set to the same value. If only

            `min` or only `max` is specified, `min` and `max` will be set equally.
          type: object
          properties:
            min:
              description: Minimum number of nodes in the pool
              type: integer
            max:
              description: Maximum number of nodes in the pool
              type: integer
