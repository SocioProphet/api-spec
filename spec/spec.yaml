openapi: 3.0.0
info:
  title: The Giant Swarm API
  description: >
    This is the documentation for the Giant Swarm API.


    For an introduction to Giant Swarm, refer to the [documentation site](https://docs.giantswarm.io/).


    The Giant Swarm API attempts to behave in a __restful__ way. As a developer, you access resources using the `GET` method and, for example, delete them using the same path and the `DELETE` method.


    Accessing resources via GET usually returns all information available about a resource, while collections, like for example the list of all clusters you have access to, only contain a selected few attributes of each member item.


    Some requests, like for example the request to create a new cluster, don't return the resource itself. Instead, the response delivers a standard message body, showing a `code` and a `message` part. The `message` contains information for you or a client's end user. The `code` attribute contains some string (example: `RESOURCE_CREATED`) that is supposed to give you details on the state of the operation, in addition to standard HTTP status codes. This message format is also used in the case of errors. We provide a [list of all response codes](https://github.com/giantswarm/api-spec/blob/master/details/RESPONSE_CODES.md) outside this documentation.


    Feedback on the API as well as this documentation is welcome via `support@giantswarm.io` or on IRC channel [#giantswarm](irc://irc.freenode.org:6667/#giantswarm) on freenode.


    ## Source


    The source of this documentation is available on [GitHub](https://github.com/giantswarm/api-spec).
  termsOfService: https://giantswarm.io/terms/
  version: 4.0.0
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
tags:
  - name: auth tokens
    description: >
      Auth Tokens are your way of authenticating against this API. You can
      create one by passing your email and base64 encoded password to the create
      auth token endpoint. The auth token never expires, in case you want to
      invalidate it you need to delete it (logout).
  - name: clusters
    description: |
      Clusters are a central resource of the Giant Swarm API. As a team using
      Giant Swarm, you set up Kubernetes clusters to run your own workloads.

      Some cluster-related API operations are provider specific. Please pay
      special attention to provider tags AWS
      Azure KVM
      to find additional information regarding provider compatibility.
  - name: info
    description: Information about the Giant Swarm installation
  - name: key pairs
    description: A key pair is a unique combination of a X.509 certificate and a private
      key. Key pairs are used to access the Kubernetes API of a cluster, both
      using `kubectl` and any standard web browser.
    externalDocs:
      url: https://docs.giantswarm.io/guides/accessing-services-from-the-outside/
      description: "User guide: Accessing Pods and Services from the Outside"
  - name: nodepools
    x-internal: true
    description: |
      This concept is introduced with v5 of this API and is currently only
      available on AWS.

      Worker nodes in tenant clusters are grouped in node pools. All nodes in a
      node pool share the same configuration and scaling is controlled on a pool
      level. This allows to fulfill a variety of different workload requirements
      within the same cluster.
  - name: apps
    description: "An app is a helm chart that you can easily install on your tenant
      clusters. Use these endpoints to: find out what catalogs your installation
      supports, and list and install apps on on your tenant clusters."
  - name: app configs
    description: Creating an app config lets you supply your apps with custom configuration
      values.
  - name: organizations
    description: Organizations are groups of users who own resources like clusters.
  - name: users
    description: A user represents a person that should have access to the Giant Swarm API.
      Users can belong to many groups, and are identified by email address.
  - name: releases
    description: |
      A release is a software bundle that constitutes a cluster.

      Releases are identified by their
      [semantic version number](http://semver.org/) in the `MAJOR.MINOR.PATCH`
      format.

      A release provides _components_, like for example Kubernetes. For each
      release the contained components are listed. Changes in components are
      detailed in the _changelog_ of a release.
security:
  - AuthorizationHeaderToken: []
paths:
  /v4/appcatalogs/:
    $ref: './paths/v4/appcatalogs.yaml'
  /v4/info/:
    $ref: './paths/v4/info.yaml'
  /v4/auth-tokens/:
    $ref: './paths/v4/auth-tokens.yaml'
  /v4/users/:
    $ref: './paths/v4/users.yaml'
  /v4/user/:
    $ref: './paths/v4/user.yaml'
  /v4/users/{email}/:
    $ref: './paths/v4/users/email.yaml'
  /v4/users/{email}/password/:
    $ref: './paths/v4/users/email/password.yaml'
  /v4/clusters/:
    $ref: './paths/v4/clusters.yaml'
  /v4/clusters/{cluster_id}/:
    $ref: './paths/v4/clusters/cluster_id.yaml'
  /v4/clusters/{cluster_id}/key-pairs/:
    $ref: './paths/v4/clusters/cluster_id/key-pairs.yaml'
  /v4/clusters/{cluster_id}/status/:
    $ref: './paths/v4/clusters/cluster_id/status.yaml'
  /v4/clusters/{cluster_id}/apps/:
    $ref: './paths/v4/clusters/cluster_id/apps.yaml'
  /v4/clusters/{cluster_id}/apps/{app_name}/:
    $ref: './paths/v4/clusters/cluster_id/apps/app_name.yaml'
  /v4/clusters/{cluster_id}/apps/{app_name}/config/:
    $ref: './paths/v4/clusters/cluster_id/apps/app_name/config.yaml'
  /v4/organizations/:
    $ref: './paths/v4/organizations.yaml'
  /v4/organizations/{organization_id}/:
    $ref: './paths/v4/organizations/organization_id.yaml'
  /v4/organizations/{organization_id}/credentials/:
    $ref: './paths/v4/organizations/organization_id/credentials.yaml'
  /v4/organizations/{organization_id}/credentials/{credential_id}/:
    $ref: './paths/v4/organizations/organization_id/credentials/credential_id.yaml'
  /v4/releases/:
    $ref: './paths/v4/releases.yaml'
  /v5/clusters/:
    $ref: './paths/v5/clusters.yaml'
  /v5/clusters/{cluster_id}/:
    $ref: './paths/v5/clusters/cluster_id.yaml'
  /v5/clusters/{cluster_id}/nodepools/:
    $ref: './paths/v5/clusters/cluster_id/nodepools.yaml'
  /v5/clusters/{cluster_id}/nodepools/{nodepool_id}/:
    $ref: './paths/v5/clusters/cluster_id/nodepools/nodepool_id.yaml'
