get:
  operationId: getClusterAppConfig
  tags:
    - app configs
  summary: Get app config
  description: |
    This operation allows you to fetch the user values configmap associated
    with an app.
  parameters:
    - $ref: "../../../../../../components.yaml#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
    - $ref: "../../../../../../components.yaml#/components/parameters/XRequestIDHeader"
    - $ref: "../../../../../../components.yaml#/components/parameters/XGiantSwarmActivityHeader"
    - $ref: "../../../../../../components.yaml#/components/parameters/XGiantSwarmCmdLineHeader"
    - $ref: "../../../../../../components.yaml#/components/parameters/ClusterIdPathParameter"
    - $ref: "../../../../../../components.yaml#/components/parameters/AppNamePathParameter"
  responses:
    "200":
      description: Success
      content:
        application/json:
          schema:
            $ref: "../../../../../../components.yaml#/components/schemas/V4GetClusterAppConfigResponse"
        appication/json:
          examples:
            response:
              value:
                agent:
                  key: secret-key-here
                  endpointHost: saas-eu-west-1.instana.io
                  endpointPort: "443"
                zone:
                  name: giantswarm-cluster
    "401":
      $ref: "../../../../../../components.yaml#/components/responses/V4Generic401Response"
    "404":
      description: App Config not found
      content:
        application/json:
          schema:
            $ref: "../../../../../../components.yaml#/components/schemas/V4GenericResponse"
          examples:
            response:
              value:
                code: RESOURCE_NOT_FOUND
                message: Unable to show app config. (app with name 'my-awesome-app'
                  in cluster 'abc12' could not be found)
put:
  operationId: createClusterAppConfig
  tags:
    - app configs
  summary: Create app config
  description: >
    This operation allows you to create a values configmap for a specific
    app. The app does

    not have to exist before hand.


    If the app does exist, this endpoint will ensure that the App CR gets it's

    user_config field set correctly.


    However, if the app exists and the user_config is already set to something,

    then this request will fail. You will in that case most likely want to

    update the config using the `PATCH /v4/clusters/{cluster_id}/apps/{app_name}/config/`

    endpoint.


    ### Example POST request

    ```json
      {
        "agent": {
          "key": "secret-key-here",
          "endpointHost": "saas-eu-west-1.instana.io",
          "endpointPort": "443",
        },
        "zone": {
          "name": "giantswarm-cluster"
        }
      }
    ```
  parameters:
    - $ref: "../../../../../../components.yaml#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
    - $ref: "../../../../../../components.yaml#/components/parameters/XRequestIDHeader"
    - $ref: "../../../../../../components.yaml#/components/parameters/XGiantSwarmActivityHeader"
    - $ref: "../../../../../../components.yaml#/components/parameters/XGiantSwarmCmdLineHeader"
    - $ref: "../../../../../../components.yaml#/components/parameters/ClusterIdPathParameter"
    - $ref: "../../../../../../components.yaml#/components/parameters/AppNamePathParameter"
  requestBody:
    content:
      application/json:
        schema:
          $ref: "../../../../../../components.yaml#/components/schemas/V4CreateAppConfigRequest"
    x-examples:
      appication/json:
        agent:
          key: secret-key-here
          endpointHost: saas-eu-west-1.instana.io
          endpointPort: "443"
        zone:
          name: giantswarm-cluster
  responses:
    "200":
      description: Success
      content:
        application/json:
          schema:
            $ref: "../../../../../../components.yaml#/components/schemas/V4GenericResponse"
        appication/json:
          examples:
            response:
              value:
                code: RESOURCE_CREATED
                message: App config for 'my-awesome-app' on 'abc12' has been
                  created.
    "400":
      description: Invalid input
      content:
        application/json:
          schema:
            $ref: "../../../../../../components.yaml#/components/schemas/V4GenericResponse"
          examples:
            response:
              value:
                code: INVALID_INPUT
                message: App config could not be created. (invalid input)
    "401":
      $ref: "../../../../../../components.yaml#/components/responses/V4Generic401Response"
    "409":
      description: App config already exists
      content:
        application/json:
          schema:
            $ref: "../../../../../../components.yaml#/components/schemas/V4GenericResponse"
          examples:
            response:
              value:
                code: RESOURCE_ALREADY_EXISTS
                message: A config for 'my-awesome-app' on 'abc12' already exists.
    default:
      description: Error
      content:
        application/json:
          schema:
            $ref: "../../../../../../components.yaml#/components/schemas/V4GenericResponse"
delete:
  operationId: deleteClusterAppConfig
  tags:
    - app configs
  summary: Delete an app config
  description: >
    This operation allows a user to delete an app's user config if it has
    been named according to the convention of {app-name}-user-values and

    stored in the cluster ID namespace.


    Calling this endpoint will delete the ConfigMap, but it does not remove the reference to the ConfigMap in the (spec.user_config.configmap field) from the app.


    Do make sure you also update the app and remove the reference.


    The preferred order is to first remove the reference to the configmap by

    updating the app, and only then delete the configmap using this endpoint.
  parameters:
    - $ref: "../../../../../../components.yaml#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
    - $ref: "../../../../../../components.yaml#/components/parameters/XRequestIDHeader"
    - $ref: "../../../../../../components.yaml#/components/parameters/XGiantSwarmActivityHeader"
    - $ref: "../../../../../../components.yaml#/components/parameters/XGiantSwarmCmdLineHeader"
    - $ref: "../../../../../../components.yaml#/components/parameters/ClusterIdPathParameter"
    - $ref: "../../../../../../components.yaml#/components/parameters/AppNamePathParameter"
  responses:
    "200":
      description: App Config deleted
      content:
        application/json:
          schema:
            $ref: "../../../../../../components.yaml#/components/schemas/V4GenericResponse"
          examples:
            response:
              value:
                code: RESOURCE_DELETED
                message: App config for 'my-app' on 'abc12' has been deleted.
    "401":
      $ref: "../../../../../../components.yaml#/components/responses/V4Generic401Response"
    "404":
      description: App Config not found
      content:
        application/json:
          schema:
            $ref: "../../../../../../components.yaml#/components/schemas/V4GenericResponse"
          examples:
            response:
              value:
                code: RESOURCE_NOT_FOUND
                message: The user config of app 'my-app' could not be deleted.
                  ('my-app' not found)
    default:
      description: Error
      content:
        application/json:
          schema:
            $ref: "../../../../../../components.yaml#/components/schemas/V4GenericResponse"
patch:
  operationId: modifyClusterAppConfig
  tags:
    - app configs
  summary: Modify app config
  description: >
    This operation allows you to modify the values configmap for a specific
    app.

    It's only possible to modify app configs that have been named according to the convention of

    {app-name}-user-values and stored in the cluster ID namespace.


    The full values key of the configmap will be replaced by the JSON body

    of your request.


    ### Example PATCH request

    ```json
      {
        "agent": {
          "key": "a-new-key-here",
        }
      }
    ```


    If the configmap contained content like:


    ```json
      {
        "agent": {
          "key": "an-old-key-here",
          "admin": true,
        },
        "server": {
          "url": "giantswarm.io",
        }
      }
    ```


    Then the "server" and "admin" keys will be removed.
  parameters:
    - $ref: "../../../../../../components.yaml#/components/parameters/RequiredGiantSwarmAuthorizationHeader"
    - $ref: "../../../../../../components.yaml#/components/parameters/XRequestIDHeader"
    - $ref: "../../../../../../components.yaml#/components/parameters/XGiantSwarmActivityHeader"
    - $ref: "../../../../../../components.yaml#/components/parameters/XGiantSwarmCmdLineHeader"
    - $ref: "../../../../../../components.yaml#/components/parameters/ClusterIdPathParameter"
    - $ref: "../../../../../../components.yaml#/components/parameters/AppNamePathParameter"
  requestBody:
    content:
      application/json:
        schema:
          $ref: "../../../../../../components.yaml#/components/schemas/V4CreateAppConfigRequest"
    x-examples:
      application/json:
        agent:
          key: a-new-key-here
  responses:
    "200":
      description: Success
      content:
        application/json:
          schema:
            $ref: "../../../../../../components.yaml#/components/schemas/V4GenericResponse"
        appication/json:
          examples:
            response:
              value:
                code: RESOURCE_UPDATED
                message: App config for 'my-awesome-app' on 'abc12' has been
                  updated.
    "400":
      description: Invalid input
      content:
        application/json:
          schema:
            $ref: "../../../../../../components.yaml#/components/schemas/V4GenericResponse"
          examples:
            response:
              value:
                code: INVALID_INPUT
                message: App config could not be created. (invalid input)
    "401":
      $ref: "../../../../../../components.yaml#/components/responses/V4Generic401Response"
    default:
      description: Error
      content:
        application/json:
          schema:
            $ref: "../../../../../../components.yaml#/components/schemas/V4GenericResponse"